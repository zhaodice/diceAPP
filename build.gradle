apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 30
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ['-Xjvm-default=all','-Xopt-in=kotlin.RequiresOptIn']
    }
    defaultConfig {
        multiDexEnabled true
        minSdkVersion 21
        targetSdkVersion 29//改成30将无法访问/sdcard根目录！
        versionCode 10
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"
        externalNativeBuild {
            cmake {
                //cppFlags "-std=c++11 -fexceptions -pthread"
                /**
                 * -DHAVE_CONFIG_H这个有个坑 lame配置这个参数编译不通过 libmad不加这个参数转码会失真
                 */
                cFlags "-DSTDC_HEADERS -DHAVE_CONFIG_H -DFPM_DEFAULT"
            }
            ndk {
            }
        }
    }
    buildTypes {
        release {
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    packagingOptions {
        exclude "META-INF/**"
        exclude "WEB-INF/**"
        exclude "okhttp3/**"
        exclude "net/**"
        exclude "org/**"
        exclude 'DebugProbesKt.bin'
        merge 'org/mozilla/javascript/resources/Messages.properties'
    }
    productFlavors {
        miraiCore {
            applicationId "org.mirai.zhao.dice"
            versionName "4.3.2"
            resValue "string", "app_name", "DICE X4"
            manifestPlaceholders = [
                    FRAME_TYPE : "MiraiCore"
            ]
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
        miraiGo {
            applicationId "org.mirai.zhao.gdice"
            versionName "1.0.0"
            resValue "string", "app_name", "GDICE X4"
            manifestPlaceholders = [
                    FRAME_TYPE : "MiraiGo"
            ]
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            def fileName = "Dice_unknown"
            def appName = "unknown"
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (productFlavors.applicationId[0] == 'org.mirai.zhao.gdice') {
                    appName = "GDice"
                }else if (productFlavors.applicationId[0] == 'org.mirai.zhao.dice') {
                    appName = "Dice"
                }
                if (variant.buildType.name == 'release') {//如果是release包
                    fileName = "${appName}_release_v${productFlavors.versionName[0]}.apk"
                } else if (variant.buildType.name == 'debug') {//如果是debug包
                    fileName = "${appName}_debug_v${productFlavors.versionName[0]}.apk"
                }
                // 自定义输出路径
                //variant.getPackageApplicationProvider().get().outputDirectory = new File(project.rootDir.absolutePath + File.separator + "/build/release")
                outputFileName = fileName
            }
        }
    }
}
repositories {
    maven { url 'https://jitpack.io' }
}
//
configurations {
    cleanedAnnotations
    implementation.exclude group: 'org.jetbrains', module:'annotations'
    implementation.exclude group: 'org.jetbrains.kotlinx', module:'kotlinx-coroutines-core-jvm'
    implementation.exclude group: 'org.jetbrains.kotlin', module:'kotlin-stdlib'
}
kotlin.sourceSets.all {
    languageSettings.useExperimentalAnnotation("net.mamoe.mirai.console.ConsoleFrontEndImplementation")
    languageSettings.useExperimentalAnnotation("net.mamoe.mirai.console.util.ConsoleInternalApi")
    languageSettings.useExperimentalAnnotation("net.mamoe.mirai.console.util.ConsoleExperimentalApi")
    languageSettings.useExperimentalAnnotation("net.mamoe.mirai.utils.MiraiInternalApi")
    languageSettings.useExperimentalAnnotation("net.mamoe.mirai.utils.MiraiExperimentalApi")
}
dependencies {
    implementation (fileTree(dir: "libs", include: ["*.jar"]))
    implementation (fileTree(dir: "../allLibs/ext", include: ["*.jar"]))
    implementation (fileTree(dir: "../allLibs/kotlin", include: ["*.jar"]))
    try{
        miraiCoreImplementation (fileTree(dir: "../allLibs/miraiConsole", include: ["*.jar"]))
        miraiCoreImplementation (fileTree(dir: "../allLibs/miraiLibs", include: ["*.jar"]))
    }catch(Throwable ignored){

    }
    try{
        miraiGoImplementation "com.koushikdutta.async:androidasync:3.1.0"
        miraiGoImplementation project(":miraigo-zhao")
    }catch(Throwable ignored){

    }
    //implementation project(':lib_permisshelper')

    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'io.apisense:rhino-android:1.1.1'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$androidx_navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$androidx_navigation_version"
    implementation 'cat.ereza:customactivityoncrash:1.3.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}